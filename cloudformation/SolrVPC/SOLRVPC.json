{
	
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "SOLR VPC test 20140525-01",
	"Parameters" : {
		"KeyName" : {
            "Description" :"Name of an existing EC2 KeyPair to enable SSH access",
            "Type" : "String",
            "Default" : "XKey"
        },

        "ClientIpAddressSSH" : {
			"Description" : "IP accessing SSH ports (in CIDR format, e.g.: 126.23.2.1/24)",
            "Type" :"String",
            "MinLength":"9",
            "MaxLength":"18",
            "AllowedPattern":"^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})/(\\d{1,2})$",
            "ConstraintDescription":"Must be a valid IP in CIDR notation .",
            "Default" :"0.0.0.0/0"
        },

        "ClientIpAddressWeb" : {
			"Description" : "IP accessing 8080 ports (in CIDR format, e.g.: 126.23.2.1/24)",
            "Type" :"String",
            "MinLength":"9",
            "MaxLength":"18",
            "AllowedPattern":"^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})/(\\d{1,2})$",
            "ConstraintDescription":"Must be a valid IP in CIDR notation .",
            "Default" :"0.0.0.0/0"
        },

        "ClientIpAddressSOLR" : {
			"Description" : "IP accessing SSH ports (in CIDR format, e.g.: 126.23.2.1/24)",
            "Type" :"String",
            "MinLength":"9",
            "MaxLength":"18",
            "AllowedPattern":"^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})/(\\d{1,2})$",
            "ConstraintDescription":"Must be a valid IP in CIDR notation .",
            "Default" :"0.0.0.0/0"
        },

        "InstanceType" : {
            "Type" : "String",
            "Default" : "m1.small",
            "AllowedValues" : [ "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.xlarge", "cc1.4xlarge" ],
            "Description" : "EC2 instance type (e.g.: m1.large, m1.xlarge, m2.xlarge)"
        },

        "VolumeSize" : {
            "Description" : "Volume size for each EBS volume",
            "Type" : "Number",
            "Default" : "10"
        },


        "VpcId" : {
            "Description" : "Name of  VPC",
            "Type" : "String",
            "Default" : "vpc-851918e9"
        },

        "SubnetId" : {
            "Description" : "Name of subnet in VPC",
            "Type" : "String",
            "Default" : "subnet-1d50bc6a"
        }

    },

    "Mappings" : {
        "InstanceTypeArch" : {
            "m1.small"    : { "Arch" : "64" },
            "m1.medium"   : { "Arch" : "64" },
            "m1.large"    : { "Arch" : "64" },
            "m1.xlarge"   : { "Arch" : "64" },
            "m2.xlarge"   : { "Arch" : "64" },
            "m2.2xlarge"  : { "Arch" : "64" },
            "m2.4xlarge"  : { "Arch" : "64" },
            "c1.medium"   : { "Arch" : "64" },
            "c1.xlarge"   : { "Arch" : "64" },
            "cc1.4xlarge" : { "Arch" : "64HVM" }
        },

        "RegionImageZone" : {
            "us-east-1"     : { "64" : "ami-fb8e9292", "64HVM" : "ami-978d91fe" },
            "us-west-2"     : { "64" : "ami-043a5034", "64HVM" : "ami-383a5008" },
            "us-west-1"     : { "64" : "ami-7aba833f", "64HVM" : "ami-5aba831f" },
            "eu-west-1"     : { "64" : "ami-2918e35e", "64HVM" : "ami-4b18e33c" },
            "ap-southeast-1": { "64" : "ami-b40d5ee6", "64HVM" : "ami-860d5ed4" },
            "ap-southeast-2": { "64" : "ami-3b4bd301", "64HVM" : "ami-cf4ad2f5" },
            "ap-northeast-1": { "64" : "ami-c9562fc8", "64HVM" : "ami-bb562fba" },
            "sa-east-1"     : { "64" : "ami-215dff3c", "64HVM" : "ami-635dff7e" }
        },

        "RegionZone" : {
            "us-east-1"     : {"AZ1" : "us-east-1a", "AZ2" : "us-east-1b", "AZ3" : "us-east-1b", "AZ4" : "us-east-1d", "AZ5" : "us-east-1e"},
            "us-west-1"     : {"AZ1" : "us-west-1a", "AZ2" : "us-west-1b", "AZ3" : "us-west-1c"},
            "us-west-2"     : {"AZ1" : "us-west-2a", "AZ2" : "us-west-2b"},
            "eu-west-1"     : {"AZ1" : "eu-west-1a", "AZ2" : "eu-west-1b", "AZ3" : "eu-west-1c"},
            "ap-southeast-1": {"AZ1" : "ap-southeast-1a", "AZ2" : "ap-southeast-1b"},
            "ap-southeast-2": {"AZ1" : "ap-southeast-2a", "AZ2" : "ap-southeast-2b"},
            "ap-northeast-1": {"AZ1" : "ap-northeast-1a", "AZ2" : "ap-northeast-1b"},
            "sa-east-1"     : {"AZ1" : "sa-east-1a", "AZ2" : "sa-east-1b"}
        }
	},

	"Resources" : {

		"IPAddress" : {
      		"Type" : "AWS::EC2::EIP",
      		"Properties" : {
        	"Domain" : "vpc",
        	"InstanceId" : { "Ref" : "SOLRInstance" }
      		}
    	},

    	"SOLRSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "SOLR Security Group",
                "VpcId" : { "Ref" : "VpcId" },
                "SecurityGroupIngress" : [
                        {"IpProtocol" : "tcp", "FromPort" : "8983", "ToPort" : "8983", "CidrIp" : { "Ref": "ClientIpAddressSOLR" } },
                        {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : { "Ref": "ClientIpAddressWeb" } },
                        {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref": "ClientIpAddressSSH" } }
                ]
            }
        },
       "CfnUser" : {
            "Type" : "AWS::IAM::User",
            "Properties" : {
                "Path": "/",
                "Policies": [ {
                    "PolicyName": "root",
                    "PolicyDocument": { "Statement": [ {
                        "Effect":"Allow",
                        "Action":"cloudformation:DescribeStackResource",
                        "Resource":"*"
                    } ] }
                } ]
            }
        },

        "AccessKey" : {
            "Type" : "AWS::IAM::AccessKey",
            "Properties" : {
                "UserName" : { "Ref" : "CfnUser" }
            }
        },

        "SOLRInstance" : { 
        	"Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" : {
                                "sysstat" : [],
                                "tomcat7" : [],
                                "ntp" : []
                            }
                        },
                        
                        "services" : {
                                "sysvinit" : {
                                     "ntpd"    : { "enabled" : "true", "ensureRunning" : "true" }
                                 }
                          }
                    }
                }
            },
			"Properties" : {
                "InstanceType" : { "Ref" : "InstanceType" },
                "ImageId" : { "Fn::FindInMap" : [ "RegionImageZone", { "Ref" : "AWS::Region" },
                    { "Fn::FindInMap" : [ "InstanceTypeArch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                "Tags" : [{ "Key" : "Name", "Value" : "SOLR" }],
                "SecurityGroupIds" : [ { "Ref" : "SOLRSecurityGroup" } ],
                "KeyName" : { "Ref" : "KeyName" },
                "SubnetId" : { "Ref" : "SubnetId" },
                "AvailabilityZone" : { "Fn::FindInMap" : ["RegionZone", { "Ref" : "AWS::Region"}, "AZ1"] },
                "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                "#!/bin/bash\n",
                "# Sending all output to /tmp/install.log\n",
                "exec 2> /tmp/install.log\n",
                "exec >> /tmp/install.log\n",
                "# CloudFormation: Updating scripts\n",
                "#\n",
                "yum update -y aws-cfn-bootstrap\n",
                "# Error reporting helper function\n",
                "function error_exit\n",
                "{\n",
                "/opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandleSOLR" }, "'\n",
                "exit 1\n",
                "}\n",
                "# CloudFormation: Initialize\n",
                "/opt/aws/bin/cfn-init -v -s ", { "Ref" : "AWS::StackName" }, " -r SOLRInstance",
                "   --access-key ",  { "Ref" : "AccessKey" },
                "   --secret-key ", {"Fn::GetAtt": ["AccessKey", "SecretAccessKey"]},
                "   --region ", { "Ref" : "AWS::Region" }, " > /tmp/cfn-init.log 2>&1 || error_exit $(</tmp/cfn-init.log)\n",
                "# CLNGS UserData Start\n",
                "#\n",
                "# Downloading SOLR...\n",
                "wget http://apache.mirror.1000mbps.com/lucene/solr/4.8.1/solr-4.8.1.tgz -P /root\n",
                "# Untar SOLR.. \n",
                "tar -xvzf /root/solr-4.8.1.tgz -C /opt\n",
                "# Copy war to tomcat7\n",
                "cp /opt/solr-4.8.1/dist/solr-4.8.1.war /var/lib/tomcat7/webapps/\n",
                "# Running example",
                "cd /opt/solr-4.8.1/example; java -jar start.jar >>/var/log/solr.log &\n",
                "#\n",
                "# CloudFormation signal that setup is complete\n",
                "/opt/aws/bin/cfn-signal -e 0 -r \"SOLRInstance setup complete\" '", { "Ref" : "WaitHandleSOLR" }, "'\n"
                ] ] } }
            }
        },
        "WaitHandleSOLR" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle",
            "Properties" : {}
        },

        "WaitConditionSOLR" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "SOLRInstance",
            "Properties" : {
                "Handle" : { "Ref" : "WaitHandleSOLR" },
                "Timeout" : "600"
            }
        }
    },
	    "Outputs" : {
        	"SOLR" : {
            	"Value" : { "Fn::GetAtt" : [ "SOLRInstance", "PublicDnsName" ] },
            	"Description" : "Public DNS name of the SOLR  endpoint"
        	}
        }
}